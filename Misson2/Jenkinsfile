pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // 소스 코드 체크아웃
                checkout scm
                // 디렉토리 구조 확인
                bat 'dir'
            }
        }
        stage('Build') {
            steps {
                script {
                    // 일반 클래스 파일 컴파일
                    bat 'javac -encoding UTF-8 -d classes Misson2\\src\\BookManager.java'
                    // 테스트 클래스 파일 컴파일 (JUnit JAR 파일을 클래스패스에 포함)
                    bat "javac -encoding UTF-8 -d test-classes -classpath classes;${env.JUNIT_JAR} Misson2\\src\\BookManagerTest.java"
                }
            }
        }
        stage('Test') {
            steps {
                // JUnit 5 테스트 실행을 위한 classpath 설정
                def classpath= "classes;lib/;path/to/eclipse/plugins/junit-platform-console-standalone-1.7.1.jar"                
// JUnit 5 테스트 실행
                bat 'java -cp classes;lib/; path/to/eclipse/plugins/junit-platform-console-standalone-1.7.1.jar org.junit.platform.console.ConsoleLauncher--scan-classpath> test_results.txt'  
            }
        }
                
    }
    
    post {
        always {
            // 테스트 결과 파일을 저장하기 위해 아카이브
            archiveArtifacts artifacts: 'test_results.txt, performance_results.txt', allowEmptyArchive: true
        }
        failure {
            echo 'Build or test failed'
        }
        success {
            echo 'Build and test succeeded'
        }
    }
}
