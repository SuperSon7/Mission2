pipeline {
    agent any
    environment {
        // Eclipse JUnit 5 플러그인 JAR 파일 경로 설정
        ECLIPSE_JUNIT_JAR = 'C:\\opt\\eclipse\\plugins\\org.junit.platform.console_1.7.1.v20211204-0919.jar'
        JUNIT_API_JAR = 'C:\\opt\\eclipse\\plugins\\org.junit.jupiter.api_5.7.1.jar'
        JUNIT_ENGINE_JAR = 'C:\\opt\\eclipse\\plugins\\org.junit.jupiter.engine_5.7.1.jar'
        JUNIT_PARAMS_JAR = 'C:\\opt\\eclipse\\plugins\\org.junit.jupiter.params_5.7.1.jar'
    }
    stages {
        stage('Checkout') {
            steps {
                // 소스 코드 체크아웃
                checkout scm
                // 디렉토리 구조 확인
                bat 'dir'
            }
        }
        stage('Build') {
            steps {
                // PowerShell을 사용하여 모든 Java 파일을 나열하고 컴파일
                powershell '''
                $junitClasspath = "${env.JUNIT_API_JAR};${env.JUNIT_ENGINE_JAR};${env.JUNIT_PARAMS_JAR}"
                $files = Get-ChildItem -Path .\\Misson2\\src -Recurse -Filter *.java | ForEach-Object { $_.FullName }
                if ($files -ne $null) {
                    javac -encoding UTF-8 -d classes -classpath $junitClasspath $files
                } else {
                    Write-Error "No Java files found."
                }
                '''
            }
        }
        stage('Test') {
            steps {
                script {
                    // JUnit 5 테스트 실행을 위한 classpath 설정
                    def classpath = "classes;lib;${env.ECLIPSE_JUNIT_JAR};${env.JUNIT_API_JAR};${env.JUNIT_ENGINE_JAR};${env.JUNIT_PARAMS_JAR}"
                    // JUnit 5 테스트 실행
                    bat "java -cp ${classpath} org.junit.platform.console.ConsoleLauncher --scan-classpath > test_results.txt"
                }
            }
        }
    } 
    post {
        always {
            // 테스트 결과 파일을 저장하기 위해 아카이브
            archiveArtifacts 'test_results.txt'
        }
        failure {
            echo 'Build or test failed'
        }
        success {
            echo 'Build and test succeeded'
        }
    }
}
